{
    "version": "0.1.0",
    "groupings": {
    },
    "long_description": "= DESCRIPTION:\n\nRightScale Database Manager (beta) \n\nThis cookbook provides a set of database agnostic recipes that encapsulate \nfunctionality required for the RightScale Database Manager runbook.\n\nIncluded is also a lightweight resource to manage your database \nacross multiple cloud VMs. \n      \n= REQUIREMENTS:\n\n * Requires a VM launched from a RightScale managed RightImage \n\n * Needs RightScale Premium ServerTemplate tools gem installed on system.\n   This gem is only available for paid RightScale customers.\n   Please contact sales@rightscale.com to upgrade you account.\n       \n= USAGE:\n\n * DB object setup in default recipe. Referenced by name which is also the data\n   path.\n * Uses persist option to serialize the DB resource to Chef node between \n   converges. This allows operational recipes to call actions on the db \n   resource without, re-specifing creation attributes.\n\n * WARNING: The db::do_force_reset recipe will wipe the current database into a \n   pristine state.  This utility action can be useful in development and test \n   environments.  Not recommended for production use.\n   WARNING: this will delete any data in your database!\n\n",
    "attributes": {
      "db/application/password": {
        "required": "required",
        "calculated": false,
        "choice": [

        ],
        "type": "string",
        "recipes": [
          "db::default"
        ],
        "description": "The password of the database user that has 'user' privileges.",
        "display_name": "Database Application Password"
      },
      "db/admin/password": {
        "required": "required",
        "calculated": false,
        "choice": [

        ],
        "type": "string",
        "recipes": [
          "db::default",
          "db::do_backup"
        ],
        "description": "The password of the database user that has 'admin' privileges.",
        "display_name": "Database Admin Password"
      },
      "db/backup/secondary_location": {
        "required": "optional",
        "calculated": false,
        "choice": [
          "S3",
          "CloudFiles"
        ],
        "default": "S3",
        "type": "string",
        "recipes": [
          "db::do_secondary_backup",
          "db::do_secondary_restore"
        ],
        "description": "The prefix that will be used to name/locate the backup of a particular database.",
        "display_name": "Backup Lineage"
      },
      "db/application/user": {
        "required": "required",
        "calculated": false,
        "choice": [

        ],
        "type": "string",
        "recipes": [
          "db::default"
        ],
        "description": "The username of the database user that has 'user' privileges.",
        "display_name": "Database Application Username"
      },
      "db/admin/user": {
        "required": "required",
        "calculated": false,
        "choice": [

        ],
        "type": "string",
        "recipes": [
          "db::default",
          "db::do_backup"
        ],
        "description": "The username of the database user that has 'admin' privileges.",
        "display_name": "Database Admin Username"
      },
      "db/backup/lineage": {
        "required": "required",
        "calculated": false,
        "choice": [

        ],
        "type": "string",
        "recipes": [
          "db::do_backup",
          "db::do_restore",
          "db::do_backup_schedule_enable",
          "db::do_backup_schedule_disable"
        ],
        "description": "The prefix that will be used to name/locate the backup of a particular database.",
        "display_name": "Backup Lineage"
      },
      "db/fqdn": {
        "required": "required",
        "calculated": false,
        "choice": [

        ],
        "type": "string",
        "recipes": [

        ],
        "description": "The fully qualified hostname for the Master Database.",
        "display_name": "Database Master FQDN"
      },
      "db": {
        "required": "optional",
        "calculated": false,
        "choice": [

        ],
        "type": "hash",
        "recipes": [

        ],
        "display_name": "General Database Options"
      }
    },
    "recommendations": {
    },
    "dependencies": {
      "sys_firewall": [

      ],
      "block_device": [

      ]
    },
    "maintainer": "RightScale, Inc.",
    "suggestions": {
    },
    "recipes": {
      "db::do_restore": "Restores the database from the latest backup available in persistent storage of the current cloud.",
      "db::setup_monitoring": "Install database collectd monitoring support",
      "db::request_appserver_allow": "Sends request to allow connections from the caller's private IP address to all database servers in the deployment that are tagged with database:active=true. This should be run on a application server before attempting a database connection.",
      "db::do_secondary_backup": "Creates a backup of the database to a secondary location.  Current choices are ",
      "db::setup_block_device": "Relocates the database data directory onto a block_device that supports snapshot backup and restore. This should be run on a newly operational server before it get placed into production.",
      "db::default": "Adds the database:active=true tag to your server which identifies it as an database server. This is used by application servers to identify active databases.",
      "db::do_secondary_restore": "Restores the database from the latest backup available in persistent storage of the current cloud.",
      "db::do_backup": "Creates a backup of the database using persistent storage in the current cloud.  On Rackspace snapshots are uploaded to CloudFiles.  For all other clouds, volume snapshots (like EBS) are used.",
      "db::install_server": "Installs and sets up the packages that are required for database servers.",
      "db::do_appservers_allow": "Allow connections from all application servers in the deployment that are tagged with appserver:active=true. This should be run on a database server to allow application servers to connect.",
      "db::do_backup_schedule_enable": "Enables db::do_backup to be run periodically.",
      "db::install_client": "Installs the database client onto the VM so it can connect to a running server.  This should to be setup on all servers ",
      "db::do_force_reset": "Reset the DB back to a pristine state. WARNING: this will delete any data in your database!",
      "db::setup_privileges_admin": "Adds the username and password for 'superuser' privileges.",
      "db::do_backup_schedule_disable": "Disables db::do_backup from being run periodically.",
      "db::request_appserver_deny": "Sends request to deny connections from the caller's private IP address to all database servers in the deployment that are tagged with database:active=true.  This should be run on a application server upon decommissioning.",
      "db::do_appservers_deny": "Deny connections from all application servers in the deployment that are tagged with appserver:active=true.  This can be run on a database server to deny connections from all application servers in the deployment.",
      "db::setup_privileges_application": "Adds username and password for application privileges."
    },
    "maintainer_email": "support@rightscale.com",
    "conflicting": {
    },
    "license": "Copyright (c) 2011 RightScale, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
    "providing": {
    },
    "name": "db",
    "replacing": {
    },
    "platforms": {
    },
    "description": "Installs and configures the MySQL database."
  }